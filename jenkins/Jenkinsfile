pipeline {
    agent {
        any {
            maven 'maven:3.9.0'
            args '-v /root/.m2:/root/.m2'
        }
    }
    environment {
        SONARQUBE_SERVER = 'http://3.110.31.171:9000' // Replace with your SonarQube server URL
        SONARQUBE_TOKEN = 'sqp_bfba95fa30b181608eb6d7952a7c65179872e1df' // Replace with your SonarQube token
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv('SonarQube') {
                        sh 'mvn sonar:sonar -Dsonar.projectKey=simple-project -Dsonar.host.url=$SONARQUBE_SERVER -Dsonar.login=$SONARQUBE_TOKEN'
                    }
                }
            }
        }
        stage('Test and Coverage') {
            steps {
                sh 'mvn test'
                sh 'mvn verify' // Generates the JaCoCo report
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
    post {
        success {
            echo "Pipeline for branch '${env.BRANCH_NAME}' executed successfully! ðŸŽ‰"
        }
        failure {
            echo "Pipeline for branch '${env.BRANCH_NAME}' failed. Please check the logs for details."
        }
    }
}
